// Code generated by MockGen. DO NOT EDIT.
// Source: ./interface.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	entities "proxy/internal/modules/geo/entities"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGeoServicer is a mock of GeoServicer interface.
type MockGeoServicer struct {
	ctrl     *gomock.Controller
	recorder *MockGeoServicerMockRecorder
}

// MockGeoServicerMockRecorder is the mock recorder for MockGeoServicer.
type MockGeoServicerMockRecorder struct {
	mock *MockGeoServicer
}

// NewMockGeoServicer creates a new mock instance.
func NewMockGeoServicer(ctrl *gomock.Controller) *MockGeoServicer {
	mock := &MockGeoServicer{ctrl: ctrl}
	mock.recorder = &MockGeoServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGeoServicer) EXPECT() *MockGeoServicerMockRecorder {
	return m.recorder
}

// AddressSearch mocks base method.
func (m *MockGeoServicer) AddressSearch(input string) ([]*entities.Address, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddressSearch", input)
	ret0, _ := ret[0].([]*entities.Address)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddressSearch indicates an expected call of AddressSearch.
func (mr *MockGeoServicerMockRecorder) AddressSearch(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddressSearch", reflect.TypeOf((*MockGeoServicer)(nil).AddressSearch), input)
}

// GeoCode mocks base method.
func (m *MockGeoServicer) GeoCode(lat, lng string) ([]*entities.Address, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GeoCode", lat, lng)
	ret0, _ := ret[0].([]*entities.Address)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GeoCode indicates an expected call of GeoCode.
func (mr *MockGeoServicerMockRecorder) GeoCode(lat, lng interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GeoCode", reflect.TypeOf((*MockGeoServicer)(nil).GeoCode), lat, lng)
}
