basePath: /
definitions:
  controller.AddressGeocodeRequestBody:
    properties:
      lat:
        example: "55.753214"
        type: string
      lng:
        example: "37.642589"
        type: string
    required:
    - lat
    - lng
    type: object
  controller.AddressSearchRequestBody:
    properties:
      query:
        example: Подкопаевский переулок
        type: string
    required:
    - query
    type: object
  entities.User:
    properties:
      email:
        example: admin@example.com
        type: string
      password:
        example: password
        type: string
    required:
    - email
    - password
    type: object
  readresponder.JSONResponse:
    properties:
      data: {}
      error:
        type: boolean
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Geoservice with swagger docs and authentication
  title: Geoservice API
  version: 2.0.0
paths:
  /api/address/geocode:
    post:
      consumes:
      - application/json
      description: Return a list of addresses provided geo coordinates
      parameters:
      - description: coordinates
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/controller.AddressGeocodeRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/readresponder.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/readresponder.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/readresponder.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: Search by coordinates
      tags:
      - address
  /api/address/search:
    post:
      consumes:
      - application/json
      description: Return a list of addresses provided street name
      parameters:
      - description: street name
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/controller.AddressSearchRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/readresponder.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/readresponder.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/readresponder.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: Search by street name
      tags:
      - address
  /api/login:
    post:
      consumes:
      - application/json
      description: Authenticate user provided their email and password
      parameters:
      - description: user credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/readresponder.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/readresponder.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/readresponder.JSONResponse'
      summary: authenticate user
      tags:
      - auth
  /api/register:
    post:
      consumes:
      - application/json
      description: Register new user provided email address and passport
      parameters:
      - description: user credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/readresponder.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/readresponder.JSONResponse'
      summary: register new user
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
